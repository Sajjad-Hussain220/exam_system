//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace examsys.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class db_examsysEntities : DbContext
    {
        public db_examsysEntities()
            : base("name=db_examsysEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbl_COURSE> tbl_COURSE { get; set; }
        public virtual DbSet<tbl_DEPARTMENT> tbl_DEPARTMENT { get; set; }
        public virtual DbSet<tbl_EXAM> tbl_EXAM { get; set; }
        public virtual DbSet<tbl_RESULT> tbl_RESULT { get; set; }
        public virtual DbSet<tbl_SEMESTER_DETAILS> tbl_SEMESTER_DETAILS { get; set; }
        public virtual DbSet<tbl_STUDENT> tbl_STUDENT { get; set; }
        public virtual DbSet<tbl_STUDENT_AUDIT> tbl_STUDENT_AUDIT { get; set; }
        public virtual DbSet<tbl_STUDENT_SEMESTER> tbl_STUDENT_SEMESTER { get; set; }
        public virtual DbSet<tbl_TEACHER> tbl_TEACHER { get; set; }
        public virtual DbSet<vw_ExamResults> vw_ExamResults { get; set; }
        public virtual DbSet<vw_StudentDetails> vw_StudentDetails { get; set; }
    
        [DbFunction("db_examsysEntities", "fn_GetPaidStudents")]
        public virtual IQueryable<fn_GetPaidStudents_Result> fn_GetPaidStudents()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetPaidStudents_Result>("[db_examsysEntities].[fn_GetPaidStudents]()");
        }
    
        public virtual int sp_DeleteStudent(Nullable<int> st_ID)
        {
            var st_IDParameter = st_ID.HasValue ?
                new ObjectParameter("St_ID", st_ID) :
                new ObjectParameter("St_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteStudent", st_IDParameter);
        }
    
        public virtual ObjectResult<sp_GetActiveAndInactiveCourses_Result> sp_GetActiveAndInactiveCourses()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetActiveAndInactiveCourses_Result>("sp_GetActiveAndInactiveCourses");
        }
    
        public virtual ObjectResult<sp_GetStudentsEnrolledInBothCourses_Result> sp_GetStudentsEnrolledInBothCourses(string courseCode1, string courseCode2)
        {
            var courseCode1Parameter = courseCode1 != null ?
                new ObjectParameter("CourseCode1", courseCode1) :
                new ObjectParameter("CourseCode1", typeof(string));
    
            var courseCode2Parameter = courseCode2 != null ?
                new ObjectParameter("CourseCode2", courseCode2) :
                new ObjectParameter("CourseCode2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetStudentsEnrolledInBothCourses_Result>("sp_GetStudentsEnrolledInBothCourses", courseCode1Parameter, courseCode2Parameter);
        }
    
        public virtual ObjectResult<sp_GetStudentsEnrolledInOneCourseOnly_Result> sp_GetStudentsEnrolledInOneCourseOnly(string courseCode1, string courseCode2)
        {
            var courseCode1Parameter = courseCode1 != null ?
                new ObjectParameter("CourseCode1", courseCode1) :
                new ObjectParameter("CourseCode1", typeof(string));
    
            var courseCode2Parameter = courseCode2 != null ?
                new ObjectParameter("CourseCode2", courseCode2) :
                new ObjectParameter("CourseCode2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetStudentsEnrolledInOneCourseOnly_Result>("sp_GetStudentsEnrolledInOneCourseOnly", courseCode1Parameter, courseCode2Parameter);
        }
    
        public virtual ObjectResult<sp_GetStudentsWithHighMarks_Result> sp_GetStudentsWithHighMarks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetStudentsWithHighMarks_Result>("sp_GetStudentsWithHighMarks");
        }
    
        public virtual ObjectResult<sp_GetTeacherCountByDepartment_Result> sp_GetTeacherCountByDepartment()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetTeacherCountByDepartment_Result>("sp_GetTeacherCountByDepartment");
        }
    
        public virtual ObjectResult<sp_GetTopScoringStudents_Result> sp_GetTopScoringStudents()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetTopScoringStudents_Result>("sp_GetTopScoringStudents");
        }
    
        public virtual int sp_InsertStudent(string st_Name, string contact, Nullable<bool> fee_Payment)
        {
            var st_NameParameter = st_Name != null ?
                new ObjectParameter("St_Name", st_Name) :
                new ObjectParameter("St_Name", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var fee_PaymentParameter = fee_Payment.HasValue ?
                new ObjectParameter("Fee_Payment", fee_Payment) :
                new ObjectParameter("Fee_Payment", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertStudent", st_NameParameter, contactParameter, fee_PaymentParameter);
        }
    
        public virtual ObjectResult<sp_SelectAllStudents_Result> sp_SelectAllStudents()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectAllStudents_Result>("sp_SelectAllStudents");
        }
    
        public virtual ObjectResult<sp_SelectExamResultsByStudent_Result> sp_SelectExamResultsByStudent(Nullable<int> st_ID)
        {
            var st_IDParameter = st_ID.HasValue ?
                new ObjectParameter("St_ID", st_ID) :
                new ObjectParameter("St_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectExamResultsByStudent_Result>("sp_SelectExamResultsByStudent", st_IDParameter);
        }
    
        public virtual int sp_UpdateStudent(Nullable<int> st_ID, string st_Name, string contact, Nullable<bool> fee_Payment)
        {
            var st_IDParameter = st_ID.HasValue ?
                new ObjectParameter("St_ID", st_ID) :
                new ObjectParameter("St_ID", typeof(int));
    
            var st_NameParameter = st_Name != null ?
                new ObjectParameter("St_Name", st_Name) :
                new ObjectParameter("St_Name", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var fee_PaymentParameter = fee_Payment.HasValue ?
                new ObjectParameter("Fee_Payment", fee_Payment) :
                new ObjectParameter("Fee_Payment", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateStudent", st_IDParameter, st_NameParameter, contactParameter, fee_PaymentParameter);
        }
    }
}
